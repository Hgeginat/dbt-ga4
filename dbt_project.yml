name: 'ga4'
version: '2.0.1'
config-version: 2
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# The following variables should be set in the project that loads this package. 
vars:
   project: "polestar-explore"
   dataset: "analytics_200752076"
   start_date: "20200820" # Defines the earliest GA4 event _TABLE_SUFFIX to load into base events model.
   frequency: "daily" # daily|streaming defaults to daily. If you only use the streaming export, use this setting to only get the streaming data.
   static_incremental_days: 3 # Number of days to scan and reprocess on each run

# Query parameter exclusions
# You can remove specific query parameters from the page_location by listing them here
  #  query_parameter_exclusions: ["gclid","fbclid","_ga"]

# User Properties
# User-scoped event properties can be assigned using the following variable configuration in your dbt_project.yml
#The dim_ga4__users dimension table will be updated to include the last value seen for each user


   user_properties:
     - user_property_name: "logged_in"
       value_type: "string_value"
     - user_property_name: "is_paired"
       value_type: "string_value"
     - user_property_name: "polestar_market"
       value_type: "string_value"
     - user_property_name: "first_open_time"
       value_type: "int_value"

       
   derived_user_properties:
     - event_parameter: "session_engaged"
       user_property_name: "session_engaged"
       value_type: "int_value"
     - event_parameter: "engagement_time_msec"
       user_property_name: "engagement_time_msec"
       value_type: "int_value"
     - event_parameter: "name"
       user_property_name: "name"
       value_type: "string_value"

#Session properties can be defined here. # Review needed session properties to be added in here so displayed in derived_session_properties
   derived_session_properties:
     - event_parameter: "item_category"
       session_property_name: "item_category"
       value_type: "string_value"
     - event_parameter: "content_type"
       session_property_name: "content_type"
       value_type: "string_value"
     - event_parameter: "session_engaged"
       session_property_name: "session_engaged"
       value_type: "int_value"
     - event_parameter: "engagement_time_msec"
       session_property_name: "engagement_time_msec"
       value_type: "int_value"
     - event_parameter: "item_id"
       session_property_name: "item_id"
       value_type: "string_value"
     - event_parameter: "name"
       session_property_name: "name"
       value_type: "string_value" 
      


# Custom parameters
# custom parameters are registered by creating a var matching the event name where the custom parameter occurs
# and providing the name, matching the parameters name
# # and matching the value_type to the type of column in BigQuery (string_value, int_value, float_value, double_value)
# # the below example shows a page_view enhanced with the clean_event event parameter from the ga4_obfuscated_sample_ecommerce project
#    page_view:
#      - name: "clean_event"
#        value_type: "string_value"  

# The main base events model is materialized as a partitioned, incremental table
# The staging models are materialized as views
# The dimensional models are materialized as tables
models:
  ga4:
    +materialized: view 
    marts:
      +materialized: table

#All tables here in the folder staging > ga4  --> view but not the one that are staging> ga4> base  these will be materialized into tables